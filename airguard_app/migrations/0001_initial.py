# Generated by Django 5.0.3 on 2025-03-10 00:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AirSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_level', models.IntegerField(default=0)),
                ('temperature', models.FloatField(default=0.0)),
                ('humidity', models.FloatField(default=0.0)),
                ('oxygen', models.FloatField(default=0.0)),
                ('pollution', models.FloatField(default=0.0)),
                ('ozone', models.IntegerField(default=0)),
                ('light', models.IntegerField(default=0)),
                ('uv_light', models.FloatField(default=0.0)),
                ('quality', models.IntegerField(default=0)),
                ('current_date_time', models.DateTimeField()),
                ('flow_rate', models.FloatField(default=0.0)),
                ('total_milli_liters', models.IntegerField(default=0)),
                ('percentage', models.IntegerField(default=0)),
                ('liquid_level', models.IntegerField(default=0)),
                ('tds_value', models.FloatField(default=0.0)),
                ('air_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='airguard_app.airsystem')),
            ],
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_on', models.BooleanField(default=False)),
                ('button_type', models.CharField(choices=[('PLANT_LIGHT', 'Plant Light'), ('PLANT_HEATING', 'Plant Heating'), ('PLANT_COOLING', 'Plant Cooling'), ('DEHUMIDIFIER', 'Dehumidifier'), ('HUMIDIFIER', 'Humidifier'), ('PM10_FILTER', 'PM10 Filter'), ('DUST_FILTER', 'Dust and Other Particles Filter')], max_length=30)),
                ('air_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='airguard_app.airsystem')),
            ],
            options={
                'unique_together': {('air_system', 'button_type')},
            },
        ),
    ]
